/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_nb_osx.h"
#include "keys_nb_win.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define DEFAULT_L 0
#define SYMBOLS_L 1
#define ARROWS_L  2
#define NUMBERS_L 3
#define DEFAULT_L_WIN 4
#define SYMBOLS_L_WIN 5
#define ARROWS_L_WIN  6
#define NUMBERS_L_WIN 7
#define SHORTCUT_L_WIN 8

&caps_word { continue-list = <NB_UNDERSCORE NB_MINUS WNB_UNDERSCORE WNB_MINUS>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_ques {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&ques_excl>;
        };

        aa {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 32>;
        };

        ae {
            bindings = <&kp APOS>;
            key-positions = <3 4>;
        };

        oe {
            bindings = <&kp SEMI>;
            key-positions = <27 28>;
        };

        combo_lpar {
            bindings = <&kp NB_LPAR>;
            key-positions = <9 8>;
        };

        combo_rpara {
            bindings = <&kp NB_RPAR>;
            key-positions = <32 33>;
        };

        combo-lcurl {
            bindings = <&kp NB_RBRC>;
            key-positions = <2 3>;
        };

        combo_rcurl {
            bindings = <&kp NB_RBRC>;
            key-positions = <26 27>;
        };

        combo_at {
            bindings = <&kp NB_AT>;
            key-positions = <3 8>;
        };
    };
};

/ {
    behaviors {
        hml: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <6 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
            hold-trigger-on-release;
        };

        thb: thumb_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };

        thb2: thumb_mods_layer {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;
        };

        apos_dqt: quot_doublequot {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp NB_APOS>, <&kp NB_DQT>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ques_excl: questionmark_exlamation_mark {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp NB_QMARK>, <&kp NB_EXCL>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            label = "HMR";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 39 40 41>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            #define B13  &hml LCTRL   A  
            #define B14  &hml LALT  R
            #define B15  &hml LCMD   S
            #define B16  &hml LSHFT  T

            #define B19  &hmr RSHFT  N
            #define B20  &hmr RCMD  E
            #define B21  &hmr RALT   I
            #define B22  &hmr RCTRL   O
            #define FUN_TAB &thb2 NUMBERS_L TAB
            #define MED_ENT &thb2 SYMBOLS_L ENTER
            #define NAV_BAC &thb2 ARROWS_L BSPC
            #define C8 &thb2 ARROWS_L ESC
            #define NUM_SPC &thb2 NUMBERS_L SPACE
            #define C13 &thb2 NUMBERS_L DEL

            display-name = "DEF";
            bindings = <
&kp LG(V)  &kp Q         &kp W        &kp F                              &kp P                  &kp B                  &kp J                  &kp L                &kp U        &kp Y        &apos_dqt     &trans
&kp LG(C)  &hml LCTRL A  &hml LALT R  &hml LGUI S                        &hml LSHFT T           &kp G                  &kp M                  &hmr RIGHT_SHIFT N   &hmr RGUI E  &hmr LALT I  &hmr RCTRL O  &trans
&kp GRAVE  &kp Z         &mt RALT X   &kp C                              &thb2 MOUSE_L D                  &kp V                  &kp K                  &kp H                &kp COMMA    &kp DOT      &kp FSLH      &trans
                                      &thb LC(LA(LS(LEFT_COMMAND))) ESC  &thb2 NUMBERS_L SPACE  &thb2 NUMBERS_L TAB    &thb2 SYMBOLS_L ENTER  &thb2 ARROWS_L BSPC  &kp DEL
            >;
        };

        symbols_layer {
            display-name = "SYMB";
            bindings = <
&kp NB_GRAVE  &kp NB_DLLR  &kp NB_PRCNT  &kp NB_AMPS   &kp NB_STAR   &kp PRCNT       &kp NB_HASH   &kp NB_AT     &kp NB_PIPE  &kp NB_QMARK  &kp NB_EXCL  &kp EQUAL
&kp GRAVE     &kp NB_LBRC  &kp NB_RBRC   &kp NB_LPAR   &kp NB_RPAR   &kp NB_EQUAL    &kp NB_PLUS   &kp NB_MINUS  &kp NB_FSLH  &kp NB_BSLH   &kp NB_APOS  &kp NB_AT
&caps_word    &kp NB_LBKT  &kp NB_RBKT   &kp NB_TILDE  &kp NB_CARET  &kp NB_LT       &kp NB_UNDER  &kp NB_GT     &kp NB_DQT   &kp NB_GRAVE  &kp NB_STAR  &tog DEFAULT_L_WIN
                                         &trans        &kp SPACE     &trans          &trans        &trans        &trans
            >;
        };

        arrows_layer {
            #define B31  &hml LCTRL   LEFT
            #define B23  &hml LALT  DOWN
            #define B24  &hml LCMD   UP
            #define B25  &hml LSHFT  RIGHT   

            #define B27  &hmr RCMD  C_PREVIOUS
            #define B28  &hmr RALT   C_PLAY_PAUSE
            #define B29  &hmr RCTRL   C_FAST_FORWARD
            #define B30  &hmr RCTRL   C_PLAY_PAUSE

            display-name = "NAV";
            bindings = <
&bt BT_SEL 0  &none     &none          &kp PG_UP  &none      &bt BT_CLR    &bt BT_CLR             &kp C_VOL_DN     &kp K_MUTE    &kp C_VOLUME_UP  &none      &bt BT_SEL 2
&kp HOME      &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT  &kp END       &none B27 B28 B29 B30  &kp RIGHT_SHIFT  &kp LEFT_GUI  &kp RALT         &kp LCTRL  &kp PG_DN
&kp LG(V)     &kp HOME  &kp PAGE_DOWN  &kp PG_UP  &kp END    &kp LG(X)     &none                  &none            &trans        &trans           &trans     &trans
                                       &trans     &trans
            >;
        };

        numbers_layer {
            display-name = "NUM";
            bindings = <
&kp ESC  &none  &none   &none   &kp WNB_LT    &kp WNB_GT    &kp BSPC  &kp N7  &kp N8  &kp N9  &kp NB_MINUS   &kp NB_FSLH
&none    &none  &kp F2  &none   &kp WNB_STAR  &kp MINUS     &kp N0    &kp N4  &kp N5  &kp N6  &kp NB_PLUS    &kp NB_STAR
&kp TAB  &none  &none   &none   &kp WNB_FSLH  &kp SLASH     &kp N0    &kp N1  &kp N2  &kp N3  &kp WNB_COMMA  &none
                        &trans  &trans        &trans        &trans    &kp N0  &trans
            >;
        };
        mouse_layer {
            display-name = "NUM";
            bindings = <
&kp ESC  &none  &none   &none   &kp WNB_LT    &kp WNB_GT    &kp BSPC  &kp N7  &kp N8  &kp N9  &kp NB_MINUS   &kp NB_FSLH
&none    &none  &kp F2  &mkp LCLK   &mkp RCLC  &kp MINUS     &kp N0    &kp N4  &kp N5  &kp N6  &kp NB_PLUS    &kp NB_STAR
&kp TAB  &none  &none   &none   %none  &kp SLASH     &kp N0    &kp N1  &kp N2  &kp N3  &kp WNB_COMMA  &none
                        &trans  &mkp LCLK   &mkp RCLC        &trans    &kp N0  &trans
            >;
        };
        default_layer_win {
            #define WB13  &hml LCTRL   A  
            #define WB14  &hml LCMD  R
            #define WB15  &hml LALT   S
            #define WB16  &hml LCTRL  T

            #define WB19  &hmr LCTRL  N
            #define WB20  &hmr LALT  E
            #define WB21  &hmr LCMD   I
            #define WB22  &hmr LCTRL   O
            #define WC10 &thb LSHFT ENTER
            #define WC11 &thb LSHFT BSPC
            #define WC12 &thb2 SHORTCUT_L_WIN SPACE
            #define WC8 &thb2 ARROWS_L_WIN ESC
            #define WC9 &thb2 SYMBOLS_L_WIN SPACE
            #define WC13 &thb2 NUMBERS_L_WIN DEL

            display-name = "DEF";
            bindings = <
&kp WNB_GRAVE                &kp Q       &kp W                      &kp F                                   &kp P       &kp B    &kp J  &kp L  &kp U  &kp Y  &kp SEMI  &kp LBKT
&kp TAB WB13 WB14 WB15 WB16  &kp G       &kp M WB19 WB20 WB21 WB22  &kp SQT                                 &kp WNB_LT  &kp Z    &kp X  &kp C  &kp D  &kp V  &kp K     &kp H
&kp COMMA                    &kp PERIOD  &kp SLASH                  &caps_word WC8 WC9 WC10 WC11 WC12 WC13
            >;
        };

        symbols_layer_win {
            #define WB40 &hml LC(C) WNB_LPAR
            #define WB41 &hml LC(V) WNB_RPAR 
            #define WB42 &hml LG(V) WNB_EQUAL

            display-name = "SYMB";
            bindings = <
&kp F12        &kp WNB_GRAVE  &kp WNB_DLLR                 &kp WNB_PRCNT  &kp WNB_AMPS   &kp WNB_STAR    &kp WNB_HASH   &kp WNB_AT    &kp WNB_PIPE        &kp WNB_QMARK  &kp WNB_EXCL  &kp EQUAL
&kp GRAVE      &kp WNB_LBRC   &kp WNB_RBRC WB40 WB41 WB42  &kp WNB_PLUS   &kp WNB_MINUS  &kp WNB_FSLH    &kp WNB_BSLH   &kp WNB_APOS  &kp WNB_AT          &caps_word     &kp WNB_LBKT  &kp WNB_RBKT
&kp WNB_TILDE  &kp WNB_CARET  &kp WNB_LT                   &kp WNB_UNDER  &kp WNB_GT     &kp WNB_DQT     &kp WNB_GRAVE  &kp WNB_STAR  &tog DEFAULT_L_WIN  &trans         &trans        &trans
                                                           &trans         &trans         &trans
            >;
        };

        arrows_layer_win {
            #define WB31  &hml LCTRL   LEFT
            #define WB23  &hml LALT  DOWN
            #define WB24  &hml LCMD   UP
            #define WB25  &hml LSHFT  RIGHT   

            #define WB27  &hmr LCTRL  C_PREVIOUS
            #define WB28  &hmr LALT   C_PLAY_PAUSE
            #define WB29  &hmr LCMD   C_FAST_FORWARD
            #define WB30  &hmr RCTRL   C_PLAY_PAUSE

            display-name = "NAV";
            bindings = <
&bt BT_SEL 0  &none      &none     &kp PG_UP  &none      &bt BT_CLR    &none                      &kp C_VOL_DN  &kp K_MUTE    &kp C_VOLUME_UP  &none      &bt BT_SEL 2
&kp HOME      &kp LEFT   &kp DOWN  &kp UP     &kp RIGHT  &kp END       &none WB27 WB28 WB29 WB30  &bt BT_SEL 3  &bt BT_SEL 1  &kp HOME         &kp PG_DN  &kp PG_DN
&kp LG(V)     &kp LG(C)  &none     &kp LG(V)  &kp LG(C)  &kp LG(X)     &none                      &bt BT_CLR    &trans        &trans           &trans     &trans
                                   &trans     &trans
            >;
        };

        numbers_layer_win {
            display-name = "NUM";
            bindings = <
&kp ESC  &none  &none       &none   &kp WNB_LT    &kp WNB_GT    &hml F10 BSPC  &hml F7 N7  &hml F8 N8  &hml F9 N9  &kp NB_MINUS   &kp NB_FSLH
&none    &none  &hml F2 F2  &none   &kp WNB_STAR  &kp MINUS     &hml F11 N0    &hml F4 N4  &hml F5 N5  &hml F6 N6  &kp NB_PLUS    &kp NB_STAR
&kp TAB  &none  &none       &none   &kp WNB_FSLH  &kp SLASH     &hml F12 N0    &hml F1 N1  &hml F2 N2  &hml F3 N3  &kp WNB_COMMA  &none
                            &trans  &trans        &trans        &trans         &trans      &trans
            >;
        };

        shortcut_layer_win {
            display-name = "SHO";
            bindings = <
&kp ESC  &none  &none       &none   &kp WNB_LT    &kp WNB_GT    &hml F10 BSPC  &hml F7 N7  &hml F8 N8  &hml F9 N9  &kp NB_MINUS   &kp NB_FSLH
&none    &none  &hml F2 F2  &none   &kp WNB_STAR  &kp MINUS     &hml F11 N0    &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp LG(N4)     &kp LG(N5)
&kp TAB  &none  &none       &none   &kp WNB_FSLH  &kp SLASH     &hml F12 N0    &hml F1 N1  &hml F2 N2  &hml F3 N3  &kp WNB_COMMA  &none
                            &trans  &trans        &trans        &trans         &trans      &trans
            >;
        };
    };
};
